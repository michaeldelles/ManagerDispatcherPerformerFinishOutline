<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_WaitInCurrentProcess="True" this:Main.in_TaskBatchSize="1000" this:Main.in_AfterResumeStepInCurrentProcess="True" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upaf="clr-namespace:UiPath.Persistence.Activities.FormTask;assembly=UiPath.Persistence.Activities" xmlns:upaj="clr-namespace:UiPath.Persistence.Activities.Job;assembly=UiPath.Persistence.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_WaitInCurrentProcess" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_TaskBatchSize" Type="InArgument(x:Int32)" />
    <x:Property Name="in_TaskWaitProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_AfterResumeStepInCurrentProcess" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_AfterResumeProcessName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1207,1005</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Flowchart_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Persistence.Activities.FormTask</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>UiPath.Persistence.Activities.Job</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="[Process title]&#xA;[Process description]&#xA;[Additional information (e.g., author, contact information and applications involved and required external setup)]" DisplayName="Orchestration Process" sap:VirtualizedContainerService.HintSize="796,940" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="scg:List(upaf:FormTaskData)" Name="TaskList" />
      <Variable x:TypeArguments="x:String" Name="TaskAction" />
      <Variable x:TypeArguments="upaf:FormTaskData" Name="TaskOutput" />
      <Variable x:TypeArguments="scg:List(scg:List(upaf:FormTaskData))" Name="TaskBatches" />
      <Variable x:TypeArguments="x:Int32" Name="performerItemsRemaining" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,130</av:PointCollection>
        <x:Double x:Key="Height">847</x:Double>
        <x:Double x:Key="Width">762.5</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,130</av:Point>
          <av:Size x:Key="ShapeSize">200,123</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,253 300,303</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Read configuration file and initialize, populate a config dictionary." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitConfig workflow" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\InitConfig.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Configuration\Config.xlsx</InArgument>
            <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,303</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,369 300,419</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Run Dispatcher" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Note: This snippet provides sample code for building long running workflows and requires UiPath.Persistence.Activities package to be included in the project. It is recommended to use “Orchestration Process” template to start building long running workflows.&#xA;&#xA;Start an un-attended process and suspend workflow until its completion. Workflow resumes upon completion of this particular job." DisplayName="Start Job and Resume After Completion" sap:VirtualizedContainerService.HintSize="376,923" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="Test" />
                <Variable x:TypeArguments="upaj:JobData" Name="JobPersistenceData" />
                <Variable x:TypeArguments="upaj:JobData" Name="JobData" />
                <Variable x:TypeArguments="x:String" Default="Example Dispatcher" Name="ProcessName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Dispatcher Started&quot;]" />
              <upaj:StartJobAndGetReference TimeoutMs="{x:Null}" DisplayName="Start Job And Get Reference" sap:VirtualizedContainerService.HintSize="334,220" sap2010:WorkflowViewState.IdRef="StartJobAndGetReference_4" JobOutput="[JobPersistenceData]" ProcessName="[ProcessName]">
                <upaj:StartJobAndGetReference.JobArguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="Test">[Test]</InOutArgument>
                </upaj:StartJobAndGetReference.JobArguments>
              </upaj:StartJobAndGetReference>
              <upaj:WaitForJobAndResume StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" DisplayName="Wait for Job and Resume" sap:VirtualizedContainerService.HintSize="334,162" sap2010:WorkflowViewState.IdRef="WaitForJobAndResume_1" JobInput="[JobPersistenceData]" JobOutput="[JobData]" />
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;Dispatcher Completed&quot;]" />
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,419</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,485 300,535</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Run Performer" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="numBots" />
                  <Variable x:TypeArguments="scg:List(upaj:JobData)" Default="[new List(of JobData)]" Name="performerJobs" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign Number Robots" sap:VirtualizedContainerService.HintSize="454,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[numBots]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[Integer.Parse(Config("Number of Robots").ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="454,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[String.Format(&quot;Starting {0} Performer Jobs.&quot;, numBots)]" />
                <Sequence sap2010:Annotation.AnnotationText="Note: This snippet provides sample code for building long running workflows and requires UiPath.Persistence.Activities package to be included in the project. It is recommended to use “Orchestration Process” template to start building long running workflows.&#xA;&#xA;Start an un-attended process and suspend workflow until its completion. Workflow resumes upon completion of this particular job." DisplayName="Start Job and Resume After Completion" sap:VirtualizedContainerService.HintSize="454,1369" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="Test" />
                    <Variable x:TypeArguments="upaj:JobData" Name="JobPersistenceData" />
                    <Variable x:TypeArguments="upaj:JobData" Name="JobData" />
                    <Variable x:TypeArguments="x:String" Default="TestProcess_Test" Name="ProcessName" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InterruptibleWhile Condition="[performerJobs.Count&lt;numBots]" DisplayName="While There are more bots to start jobs on" sap:VirtualizedContainerService.HintSize="412,539" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,374" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <upaj:StartJobAndGetReference TimeoutMs="{x:Null}" DisplayName="Start Job And Get Reference" sap:VirtualizedContainerService.HintSize="334,220" sap2010:WorkflowViewState.IdRef="StartJobAndGetReference_5" JobOutput="[JobPersistenceData]" ProcessName="[ProcessName]">
                          <upaj:StartJobAndGetReference.JobArguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Test">[Test]</InOutArgument>
                          </upaj:StartJobAndGetReference.JobArguments>
                        </upaj:StartJobAndGetReference>
                        <AddToCollection x:TypeArguments="upaj:JobData" Collection="[performerJobs]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[JobPersistenceData]" />
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                  </ui:InterruptibleWhile>
                  <ui:InterruptibleWhile Condition="[performerJobs.Count&gt;0]" DisplayName="While there are jobs to finish" sap:VirtualizedContainerService.HintSize="412,581" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,416" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="upaj:JobData">[JobPersistenceData]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="upaj:JobData">[performerJobs.Last]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <upaj:WaitForJobAndResume StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" DisplayName="Wait for Job and Resume" sap:VirtualizedContainerService.HintSize="334,162" sap2010:WorkflowViewState.IdRef="WaitForJobAndResume_2" JobInput="[JobPersistenceData]" JobOutput="[JobData]" />
                        <RemoveFromCollection x:TypeArguments="upaj:JobData" Collection="[performerJobs]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[JobPersistenceData]" />
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                  </ui:InterruptibleWhile>
                </Sequence>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="454,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Performer Jobs Completed&quot;]" />
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,535</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,586 300,666.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetRemaingQueueItems workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="GetRemaingQueueItems.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">Performer Queue</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="out_NumItems">[performerItemsRemaining]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID3" Condition="[performerItemsRemaining&gt;0]" DisplayName="If Performer Items Remaing" sap:VirtualizedContainerService.HintSize="151,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">224.5,666.5</av:Point>
                          <av:Size x:Key="ShapeSize">151,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">224.5,710 100,710 100,663</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">375.5,710 520,710</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,597</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">100,597 100,452 200,452</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Handle Error Case" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">520,677</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">662.5,723.816 662.5,773.816</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Run Finisher" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Note: This snippet provides sample code for building long running workflows and requires UiPath.Persistence.Activities package to be included in the project. It is recommended to use “Orchestration Process” template to start building long running workflows.&#xA;&#xA;Start an un-attended process and suspend workflow until its completion. Workflow resumes upon completion of this particular job." DisplayName="Start Job and Resume After Completion" sap:VirtualizedContainerService.HintSize="376,923" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="Test" />
                                <Variable x:TypeArguments="upaj:JobData" Name="JobPersistenceData" />
                                <Variable x:TypeArguments="upaj:JobData" Name="JobData" />
                                <Variable x:TypeArguments="x:String" Default="Example Finisher" Name="ProcessName" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Finisher Started&quot;]" />
                              <upaj:StartJobAndGetReference TimeoutMs="{x:Null}" DisplayName="Start Job And Get Reference" sap:VirtualizedContainerService.HintSize="334,220" sap2010:WorkflowViewState.IdRef="StartJobAndGetReference_6" JobOutput="[JobPersistenceData]" ProcessName="[ProcessName]">
                                <upaj:StartJobAndGetReference.JobArguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="Test">[Test]</InOutArgument>
                                </upaj:StartJobAndGetReference.JobArguments>
                              </upaj:StartJobAndGetReference>
                              <upaj:WaitForJobAndResume StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" DisplayName="Wait for Job and Resume" sap:VirtualizedContainerService.HintSize="334,162" sap2010:WorkflowViewState.IdRef="WaitForJobAndResume_3" JobInput="[JobPersistenceData]" JobOutput="[JobData]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Message="[&quot;Finisher Completed&quot;]" />
                            </Sequence>
                          </Sequence>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>